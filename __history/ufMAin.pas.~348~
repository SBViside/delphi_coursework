unit ufMAin;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Menus, Vcl.Buttons,
  Vcl.ExtCtrls, IniFiles, Vcl.ComCtrls, Vcl.Imaging.pngimage, Vcl.ExtDlgs,
  Vcl.MPlayer, Vcl.OleServer, WordXP, ComObj;

type
  TfMain = class(TForm)
    lbMAin: TListBox;
    mm: TMainMenu;
    N1: TMenuItem;
    N2: TMenuItem;
    N5: TMenuItem;
    bAdd: TBitBtn;
    bDel: TBitBtn;
    Timer: TTimer;
    bChange: TBitBtn;
    pMain: TPanel;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    sd1: TSaveDialog;
    mComments: TMemo;
    Label4: TLabel;
    lName: TLabel;
    lStatus: TLabel;
    lRate: TLabel;
    cd1: TColorDialog;
    bSearch: TBitBtn;
    mImage: TImage;
    BitBtn1: TBitBtn;
    opd1: TOpenPictureDialog;
    bSort: TBitBtn;
    N3: TMenuItem;
    lCount: TLabel;
    Label5: TLabel;
    Image1: TImage;
    StatusBar1: TStatusBar;
    MediaPlayer1: TMediaPlayer;
    Word1: TMenuItem;
    N4: TMenuItem;
    N6: TMenuItem;
    procedure TimerTimer(Sender: TObject);
    procedure N6Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
    procedure bAddClick(Sender: TObject);
    procedure bDelClick(Sender: TObject);
    procedure lbMAinClick(Sender: TObject);
    procedure bChangeClick(Sender: TObject);
    procedure N2Click(Sender: TObject);
    procedure bSearchClick(Sender: TObject);
    procedure BitBtn1Click(Sender: TObject);
    procedure bSortClick(Sender: TObject);
    procedure N3Click(Sender: TObject);
    procedure N5Click(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormActivate(Sender: TObject);
    procedure Word1Click(Sender: TObject);
  private
    { Private declarations }
  public
    ini: TIniFile;
  end;

var
  fMain: TfMain;
  count_games: integer;

implementation

{$R *.dfm}

uses ufAddGame, ufChange, ufSettings, ufRofl, ufStats;

procedure TfMain.bAddClick(Sender: TObject);
begin
  fAddGame.ShowModal;  //открывает окно добавления объекта
end;

procedure TfMain.bChangeClick(Sender: TObject);
begin
  {проверяет выбранный элемент и открывет окно для его редактирования}
  if lbMain.ItemIndex < 0 then
    MessageBox(handle, PChar('Выберите объект для изменения!'), PChar('Ошибка'), MB_ICONWARNING)
  else
    fChange.ShowModal;
end;

procedure TfMain.bDelClick(Sender: TObject);
var st: string[30];
    i, k: integer;
begin
  Image1.Hide;

  {проверяет выбранный объект и удаляет данные о нем в ListBox и в .ini фалйе}
  if lbMain.ItemIndex >= 0 then
    begin
      st := lbMain.Items[lbMain.ItemIndex];

      DeleteFile(ini.ReadString(st, 'PictureDir', 'fffffff'));
      ini.EraseSection(st);

      for i := 0 to lbMain.Count - 1 do
        if lbMain.Items[i] = st then
          k := i;

      ini.DeleteKey('Main', IntToStr(k));

      lbMain.DeleteSelected;

      lName.Caption := 'Объект не выбран';
      lStatus.Caption := 'Объект не выбран';
      lRate.Caption := 'Объект не выбран';
      mImage.Picture.LoadFromFile(ini.ReadString(st, 'PictureDir', ExtractFileDir(Application.ExeName) + '\unnamed.png'));
      mComments.Clear;

      ini.WriteInteger('Main', 'CountGames', lbMain.Count);
      fMain.lCount.Caption := IntToStr(fMain.lbMAin.Items.Count);
    end
    else MessageBox(handle, PChar('Выберите объект для удаления!'), PChar('Ошибка'), MB_ICONWARNING);
end;

procedure TfMain.BitBtn1Click(Sender: TObject);
var s: string;
begin
  {проверяет выбранный объект и позволяет загрузить любую картинку для него}
  if lbMain.ItemIndex < 0 then
    MessageBox(handle, PChar('Элемент не выбран'), PChar('Ошибка'), MB_ICONWARNING)
  else if opd1.Execute then
    begin
      mImage.Picture.LoadFromFile(opd1.FileName);
      s := ExtractFilePath(Application.ExeName) + '\pictures\' + lName.Caption + '.png';

      {картинка копируется в отдельную папку "pictures"}
      CopyFile(PChar(opd1.FileName), PChar(s) , false);

      {путь до картинки сохраняется в .ini файл}
      ini.WriteString(lName.Caption, 'PictureDir', s);
    end;
end;


procedure TfMain.bSearchClick(Sender: TObject);
var i, c: integer; s: string;
begin
  s := InputBox('Поиск объекта','Введите название: ','');
  if (s <> '') and (s <> ' ') then
  begin
  c := 0;
  for i := 0 to lbMain.Items.Count - 1 do
    if pos(AnsiLowerCase(lbMain.Items[i]), AnsiLowerCase(s)) > 0 then
      begin
        lbMain.ItemIndex := i;
        lName.Caption := ini.ReadString(lbMain.Items[lbMain.ItemIndex], 'Name', 'Нет данных');
        lStatus.Caption := ini.ReadString(lbMain.Items[lbMain.ItemIndex], 'Status', 'Нет данных');
        lRate.Caption := ini.ReadString(lbMain.Items[lbMain.ItemIndex], 'Rate', 'Нет данных');
        mComments.Text := ini.ReadString(lbMain.Items[lbMain.ItemIndex], 'Comments', 'Нет данных');
        mImage.Picture.LoadFromFile(ini.ReadString(lbMain.Items[lbMain.ItemIndex], 'PictureDir', ExtractFileDir(Application.ExeName) + '\unnamed.png'));
        c := 1;
        Image1.Show;
      case StrToInt(lRate.Caption) of
      0: Image1.Picture.LoadFromFile('0stars.png');
      1: Image1.Picture.LoadFromFile('1stars.png');
      2: Image1.Picture.LoadFromFile('2stars.png');
      3: Image1.Picture.LoadFromFile('3stars.png');
      4: Image1.Picture.LoadFromFile('4stars.png');
      5: Image1.Picture.LoadFromFile('5stars.png');
      6: Image1.Picture.LoadFromFile('6stars.png');
      7: Image1.Picture.LoadFromFile('7stars.png');
      8: Image1.Picture.LoadFromFile('8stars.png');
      9: Image1.Picture.LoadFromFile('9stars.png');
      10: Image1.Picture.LoadFromFile('10stars.png')
      end;
        break
      end;
  if c = 0 then MessageBox(handle, PChar('Элемент не найден'), PChar('Ошибка'), MB_ICONWARNING);
  end;
end;

procedure TfMain.bSortClick(Sender: TObject);
var i, h: integer; st1, st2: string[30];
begin
  st1 := ''; st2 := '';
  for h := 1 to lbMain.Items.Count - 1 do
    begin
  for i := 0 to lbMain.Items.Count - 2 do
    begin
      st1 := lbMain.Items[i];
      st2 := lbMain.Items[i + 1];
      if st1[1] > st2[1] then
        begin
          lbMain.Items[i] := st2;
          lbMain.Items[i + 1] := st1;
        end;
    end;
    end;
end;

procedure TfMain.FormActivate(Sender: TObject);
begin
  {отображает имя}
  StatusBar1.Panels[0].Text := fRofl.le1.Text;
end;

procedure TfMain.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  fRofl.Close;   //закрывает программу
end;

procedure TfMain.FormCreate(Sender: TObject);
var i, k: integer; st: string[30];
begin
  {создается .ini файл}
  ini := TIniFile.Create(ExtractFileDir(Application.ExeName) + '\config.ini');

  {загружает цвет интерфейса из .ini файла}
  fMain.Color := Ini.ReadInteger('Main', 'Color', fMain.Color);

  {загружает тип и размер шрифта из .ini файла}
  lbMAin.Font.Name := Ini.ReadString('Main', 'FontType', 'Tahoma');
  lbMAin.Font.Size := Ini.ReadInteger('Main', 'FontSize', 15);

  {загружает состояние MediaPlayer}
  if Ini.ReadBool('Main', 'Sound', True) then MediaPlayer1.Play else MediaPlayer1.Pause;

  {загружает все сохраненные объекты из .ini файла в ListBox}
  k := ini.ReadInteger('Main', 'CountGames', 0);
  if k > 0 then
    for i := 0 to k - 1 do
      begin
        st := Ini.ReadString('Main', IntToStr(i), 'ERROR');
        lbMain.Items.Add(st);
      end;

  {выводит количество всех объектов в Label}
  lCount.Caption := IntToStr(lbMAin.Items.Count);
end;

procedure TfMain.FormDestroy(Sender: TObject);
var i, k: integer;
begin
  {запись цвета интерфейса}
  Ini.WriteInteger('Main', 'Color', fMain.Color);

  {запись типа и размера шрифта}
  Ini.WriteString('Main', 'FontType', lbMain.Font.Name);
  Ini.WriteInteger('Main', 'FontSize', lbMain.Font.Size);

  {записывает все объекты в .ini файл}
  k := lbMain.Count;
  if k > 0 then
    begin
      ini.WriteInteger('Main', 'CountGames', k);
      for i := 0 to k - 1 do
        Ini.WriteString('Main', IntToStr(i), lbMain.Items[i]);
    end;

  {очистка .ini}
  Ini.Free;
end;

procedure TfMain.lbMAinClick(Sender: TObject);
var st: string[30];
begin
  {проверяет какой объект выбран}
  if lbMain.ItemIndex < 0 then
    MessageBox(handle, PChar('Выберите объект!'), PChar('Ошибка'), MB_ICONWARNING)
  else
  begin
    {выводит информацию об объекте}
    st := lbMain.Items[lbMain.ItemIndex];
    lName.Caption := ini.ReadString(st, 'Name', 'Нет данных');
    lStatus.Caption := ini.ReadString(st, 'Status', 'Нет данных');
    lRate.Caption := ini.ReadString(st, 'Rate', 'Нет данных');

    {загрузка картинку для определенного объекта}
    mImage.Picture.LoadFromFile(ini.ReadString(st,'PictureDir', ExtractFilePath(Application.ExeName) + '\unnamed.png'));

    {подгрузка визуального рейтинга, а именно звезд}
    Image1.Show;
    case StrToInt(lRate.Caption) of
      0: Image1.Picture.LoadFromFile('0stars.png');
      1: Image1.Picture.LoadFromFile('1stars.png');
      2: Image1.Picture.LoadFromFile('2stars.png');
      3: Image1.Picture.LoadFromFile('3stars.png');
      4: Image1.Picture.LoadFromFile('4stars.png');
      5: Image1.Picture.LoadFromFile('5stars.png');
      6: Image1.Picture.LoadFromFile('6stars.png');
      7: Image1.Picture.LoadFromFile('7stars.png');
      8: Image1.Picture.LoadFromFile('8stars.png');
      9: Image1.Picture.LoadFromFile('9stars.png');
      10: Image1.Picture.LoadFromFile('10stars.png')
    end;

    {выводит комментарий об объекте}
    mComments.Text := ini.ReadString(st, 'Comments', 'Нет данных');
  end;
end;

procedure TfMain.N2Click(Sender: TObject);
begin
{сохраняет список объектов в файл .txt}
  if sd1.Execute then
    begin
      if pos('.txt', sd1.FileName) > 0 then
        lbMain.Items.SaveToFile(sd1.FileName)
      else
        lbMain.Items.SaveToFile(sd1.FileName + '.txt');
    end;
end;

procedure TfMain.N3Click(Sender: TObject);
begin
  fMain.Close;
end;

procedure TfMain.N5Click(Sender: TObject);
begin
  fSettings.ShowModal;  //открывает окно настроек
end;

procedure TfMain.N6Click(Sender: TObject);
begin
  Stats.Show;    //открывает окно статистики
end;

procedure TfMain.TimerTimer(Sender: TObject);
begin
  {служит для отображения даты и времени в рельном вермени}
  StatusBar1.Panels[1].Text := DateTimeToStr(Date + Time);
end;

procedure TfMain.Word1Click(Sender: TObject);
var Word: variant; i: integer; st: string;
begin
{выводит список объектов и их информацию в документ word}
Word := CreateOleObject('Word.Application');
Word.Documents.Add;
Word.Visible:=Visible;

{здесь осуществляется сам вывод}
Word.ActiveDocument.Range.InsertBefore('Список объектов:' + #13#10#13#10);
for i := 0 to lbMAin.Items.Count - 1 do
  begin
    st := lbMAin.Items[i];
    Word.ActiveDocument.Range.InsertAfter(st + ' (Статус: ' + ini.ReadString(st, 'Status', 'Нет данных') + ' (Оценка: ' + ini.ReadString(st, 'Rate', 'Нет данных') + ')' + #13#10);
  end;
end;

end.
